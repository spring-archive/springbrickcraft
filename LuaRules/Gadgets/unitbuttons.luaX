function gadget:GetInfo() 	return{ 		name="Radar Command", 		desc = " Radar",		author ="Von66341", 		date = "07/03/2011", 		licence = "Free", 		layer=-5 ,		enabled = false 		} 	end 	local CMD_RADAR = 35525 local weaponSwitchCmdDesc={ 	id = CMD_WEAPONSWITCH,	type = CMDTYPE.ICON_MODE,	name ="Radar", 	action="radar",	tooltip="Radar On/Off", 	params={'0','Radar Off', 'Radar On'},} if(gadgetHandler:IsSyncedCode()) then --SYNCED function gadget:Initalize() gadgetHandler:RegisterCMDID(CMD_RADAR) end function gadget:UnitCreated(unitID,unitDefID, unitTeam, builderID) --assign command to units which has hasradarbutton 	local ud = UnitDefs[unitDefID] 	if ud.customParams.hasradarbutton then 		Spring.InsertUnitCmdDesc(unitID, CMD_RADAR, weaponSwitchCmdDesc) 		Spring.SetUnitAlwaysVisible(unitID,false) 	end end function gadget:AllowCommand(unitID, unitDefID, teamID, cmdID, cmdParams, cmdOptions) 	if cmdID== CMD_RADAR and not ud.customParams.hasradarbutton then --execute the command when the button is toggle 	local radius = Spring.GetUnitSensorRadius(unitID,"radar") 		if(radius ==0) then 			Spring.SetUnitSensorRadius(unitID,"radar",2100) 			Spring.Echo("Radar is On")						local weaponSwitchCmdDescID = Spring.FindUnitCmdDesc(unitID, CMD_RADAR) 			weaponSwitchCmdDesc.params[1] = cmdParams[1] 			Spring.EditUnitCmdDesc(unitID, weaponSwitchCmdDescID, weaponSwitchCmdDesc) 			weaponSwitchCmdDesc.params[1] = 1 			Spring.SetUnitAlwaysVisible(unitID, true) --unit type and location is reveal when radar is on 		else 			Spring.SetUnitSensorRadius(unitID, "radar", 0) 			Spring.Echo("Radar is off") 						local weaponSwitchCmdDescID = Spring.FindUnitCmdDesc(unitID, CMD_RADAR) 						weaponSwitchCmdDesc.params[1] = cmdParams[1] 			Spring.EditUnitCmdDesc(unitID,weaponSwitchCmdDescID, weaponSwitchCmdDesc) 			weaponSwitchCmdDesc.params[1]=1 			Spring.SetUnitAlwaysVisible(unitID,false) --reveal is stop when radar is off 		end 	end 	return true end end