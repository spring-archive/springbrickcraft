function gadget:GetInfo()  return {    name      = "feature exploder",    desc      = "on destruction features are replaced with a unit that plays a fall over animation or w/e",    author    = "knorke",    date      = "April 2011, 2011",    license   = "horse has fallen over",    layer     = -3,    enabled   = false  }end--[[local GaiaTeamID  = Spring.GetGaiaTeamID ()local treeFeature =  FeatureDefNames["f_tptree"].idlocal treeUnit =  UnitDefNames["tptree"].idfunction gadget:FeatureDestroyed(featureID, allyTeam)	if (Spring.GetGameFrame() < 30) then Spring.Echo ("30") return end	if (Spring.GetFeatureDefID (featureID) == treeFeature) then		local x,y,z = Spring.GetFeaturePosition (featureID)		local uID = Spring.CreateUnit ("tptree",x,y,z, GaiaTeamID, GaiaTeamID)		updateUnitLOS (uID)		Spring.SetUnitBlocking (uID, false)		Spring.SetUnitNeutral (uID, true)		env = Spring.UnitScript.GetScriptEnv(uID)		if (env) then Spring.UnitScript.CallAsUnit(uID, env.fall) end		end	endfunction gadget:GameFrame (f)--Spring.Echo (treeFeature)end--gets rid of the delay until engine refreshes LOS :)--but tree becomes visible outside los too :/function updateUnitLOS (unitID)	local teamList = Spring.GetTeamList ()	for _, team in ipairs(teamList) do		--_,_,_,_,teamside = Spring_GetTeamInfo(team)		local _,leader, isDead,isAiTeam, side , allyTeam = Spring.GetTeamInfo (team)		local x,y,z = Spring.GetUnitPosition (unitID)		local canSee = Spring.IsPosInLos (x,y,z, allyTeam)		if (canSee) then Spring.SetUnitLosState (unitID, allyTeam, 1) end	endend--]]